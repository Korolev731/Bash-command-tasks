Команда grep
Создайте файл fruits.txt с названиями фруктов (например, Apple, Banana, Orange, Apricot) и выведите строки, содержащие букву a.
Найдите в файле fruits.txt строки, которые начинаются с A.
Подсчитайте, сколько строк в файле содержат слово Apple.
Выведите строки из файла fruits.txt, которые не содержат букву e.
Найдите в текущей директории все файлы с расширением .txt и выведите строки, содержащие слово test.

Команда tail
Создайте файл log.txt с 15 строками текста и выведите последние 5 строк.
Выведите все строки файла log.txt, начиная с 10-й.
Сохраните последние 3 строки файла log.txt в новый файл end_log.txt.
Выведите последние 7 строк файла /var/log/syslog (если доступно).
Используя команду tail, следите за изменениями в файле log.txt в реальном времени.

Команда head
Создайте файл list.txt с 20 строками чисел и выведите первые 4 строки.
Выведите первые 10 строк файла /etc/passwd (если доступно).
Сохраните первые 6 строк файла list.txt в новый файл top_list.txt.
Выведите первые 3 строки из вывода команды ls -l.
Создайте файл с текстом и выведите только первую строку.

Команда cut
Создайте файл users.txt с данными (Имя Возраст Страна) и выведите только имена.
Из файла users.txt извлеките только возраст (второе поле).
Выведите первые два поля из файла /etc/passwd, разделённых :.
Сохраните страны (третье поле) из users.txt в файл countries.txt.
Из вывода команды date извлеките только время (например, часы и минуты).

Команда ps
Выведите список всех запущенных процессов для текущего пользователя.
Найдите PID процесса с именем bash.
Выведите только команды запущенных процессов без заголовков.
Подсчитайте, сколько процессов запущено в системе.
Выведите информацию о процессе с самым высоким использованием CPU.

Команда cp
Скопируйте файл test.txt в файл test_copy.txt.
Скопируйте директорию folder1 в folder2 со всем содержимым.
Скопируйте все файлы с расширением .txt в директорию backup.
Скопируйте файл data.txt в /tmp с сохранением исходных прав доступа.
Создайте копию файла log.txt с именем log_$(date +%Y%m%d).txt.

Команда less
Откройте файл /var/log/syslog и найдите строку с error.
Просмотрите файл readme.txt и перейдите к концу файла.
Откройте файл long_list.txt и выведите номер 50-й строки.
Используйте less для просмотра вывода команды ls -l.
Откройте файл text.txt и найдите все вхождения слова hello.

Команда nl
Создайте файл items.txt с 5 строками и пронумеруйте их.
Пронумеруйте строки файла items.txt, пропуская пустые строки.
Выведите пронумерованные строки из файла /etc/passwd.
Сохраните пронумерованный текст из items.txt в numbered_items.txt.
Пронумеруйте строки вывода команды ps aux.

Команда find
Найдите все файлы с расширением .txt в текущей директории.
Найдите все файлы, изменённые за последние 7 дней.
Найдите все пустые файлы в директории /tmp.
Найдите файлы размером больше 1 МБ в текущей директории.
Найдите все директории с именем backup в /home.

Команда du
Выведите размер текущей директории в читаемом формате.
Подсчитайте размер всех файлов с расширением .txt.
Выведите размер директории /var в килобайтах.
Найдите 5 самых больших поддиректорий в /home.
Сохраните размер текущей директории в файл size.txt.

Команда df
Выведите информацию о свободном месте на всех дисках.
Выведите только процент использования диска /.
Сохраните данные о дисках в файл disk_usage.txt.
Выведите информацию о дисках в мегабайтах.
Найдите диск с наименьшим количеством свободного места.

Команда tar
Создайте архив backup.tar из директории data.
Распакуйте архив backup.tar в директорию extracted.
Создайте сжатый архив backup.tar.gz из файлов .txt.
Выведите список содержимого архива backup.tar без распаковки.
Добавьте файл new.txt в существующий архив backup.tar.

Команда zip
Создайте архив files.zip из всех .txt файлов.
Распакуйте архив files.zip в директорию unzipped.
Добавьте файл extra.txt в существующий архив files.zip.
Выведите список файлов в files.zip без распаковки.
Создайте защищённый паролем архив secure.zip из директории secret.

Команда ps -aux
Выведите все процессы в системе с полной информацией.
Найдите процессы, запущенные пользователем root.
Подсчитайте количество процессов с именем python.
Выведите PID и команду для всех процессов bash.
Сохраните вывод ps -aux в файл processes.txt.

Команда kill
Найдите PID процесса sleep и завершите его.
Запустите sleep 100 в фоновом режиме и завершите его по PID.
Завершите все процессы с именем bash (осторожно!).
Убейте процесс с самым высоким использованием памяти.
Завершите процесс по его PID с сигналом SIGKILL.

Команда last
Выведите последние 5 записей о входах в систему.
Найдите все входы пользователя user1.
Подсчитайте, сколько раз входил текущий пользователь.
Выведите только IP-адреса из вывода last.
Сохраните историю входов в файл login_history.txt.

Команда jobs
Запустите sleep 60 в фоновом режиме и выведите список заданий.
Запустите два фоновых процесса и проверьте их статус.
Остановите процесс sleep 100 и выведите список заданий.
Перезапустите остановленное задание в фоне.
Завершите все фоновые задания.

Команда bg
Запустите sleep 50 и остановите его, затем переведите в фон.
Остановите два процесса и переведите их в фоновый режим.
Проверьте, какие процессы работают в фоне после bg.
Запустите cat и переведите его в фон.
Переведите в фон последний остановленный процесс.

Команда fg
Запустите sleep 30 в фоне и выведите его на передний план.
Остановите процесс nano и верните его на передний план.
Запустите два фоновых процесса и выведите первый на передний план.
Переведите последний фоновый процесс на передний план.
Проверьте, что происходит с fg, если нет фоновых задач.

Команда chmod
Создайте файл script.sh и дайте ему права на выполнение.
Установите права чтения и записи для владельца на data.txt.
Дайте всем пользователям права чтения на public.txt.
Уберите права выполнения у файла script.sh.
Установите права 755 на директорию tools.

Команда ping
Проверьте доступность сайта google.com с 5 запросами.
Отправьте 10 пингов на локальный адрес 127.0.0.1.
Сохраните результат пинга 8.8.8.8 в файл ping_log.txt.
Выведите только время ответа из пинга github.com.
Проверьте доступность хоста example.com без вывода лишней информации.

Команда traceroute
Проследите маршрут до google.com.
Сохраните маршрут до 8.8.8.8 в файл route.txt.
Выведите маршрут до github.com с числовыми IP без имён хостов.
Ограничьте трассировку до facebook.com 10 хопами.
Проверьте маршрут до локального адреса 127.0.0.1.

Команда nmap
Просканируйте открытые порты на localhost.
Выполните быстрое сканирование хоста 192.168.1.1.
Найдите все активные хосты в сети 192.168.1.0/24.
Сохраните результаты сканирования scanme.nmap.org в файл nmap_result.txt.
Проверьте, какие сервисы работают на портах 80 и 443 на example.com.

Команда netstat
Выведите все активные сетевые соединения.
Покажите только TCP-соединения на вашем компьютере.
Подсчитайте количество открытых портов.
Выведите список прослушиваемых портов.
Сохраните статистику сетевых соединений в файл netstat_log.txt.

Команда nslookup
Узнайте IP-адрес домена google.com.
Найдите почтовые серверы для example.com.
Выполните обратный DNS-запрос для 8.8.8.8.
Сохраните результат запроса для github.com в файл dns.txt.
Проверьте NS-записи для домена facebook.com.

Команда curl
Скачайте главную страницу example.com и выведите её в терминал.
Сохраните содержимое http://httpbin.org/get в файл response.txt.
Выполните GET-запрос к https://api.github.com и выведите заголовки.
Отправьте POST-запрос с данными name=test на http://httpbin.org/post.
Скачайте файл https://example.com/file.txt в downloaded.txt.



-------------
Команда grep
Создайте файл animals.txt с названиями животных и найдите строки, содержащие cat.
Выведите строки из animals.txt, начинающиеся с d.
Подсчитайте, сколько строк в файле содержат букву e.
Найдите строки в animals.txt, которые не содержат dog.
Выведите строки из /etc/passwd, содержащие root (если доступно).
Найдите все файлы .txt в текущей директории и выведите строки с числом 42.
Выведите строки из файла log.txt, заканчивающиеся на точку.
Найдите строки в data.txt, содержащие хотя бы одну цифру.
Подсчитайте вхождения слова error в /var/log/syslog (если доступно).
Выведите строки из notes.txt, содержащие слово TODO без учёта регистра.

Команда tail
Создайте файл records.txt с 20 строками текста и выведите последние 8 строк.
Выведите последние 3 строки файла /var/log/syslog (если доступно).
Сохраните последние 5 строк records.txt в файл end_records.txt.
Выведите все строки файла records.txt, начиная с 15-й.
Следите за изменениями в файле access.log в реальном времени.
Выведите последние 10 строк вывода команды ps aux.
Сохраните последние 2 строки файла data.txt в last_data.txt.
Выведите последние 4 строки из /etc/passwd (если доступно).
Создайте файл numbers.txt с числами 1-30 и выведите последние 7 строк.
Выведите последние 6 строк файла history.txt и подсчитайте их количество.

Команда head
Создайте файл items.txt с 25 строками и выведите первые 6 строк.
Выведите первые 5 строк файла /etc/passwd (если доступно).
Сохраните первые 10 строк items.txt в файл top_items.txt.
Выведите первые 3 строки вывода команды ls -l.
Создайте файл log.txt и выведите только первую строку.
Выведите первые 8 строк файла /var/log/syslog (если доступно).
Сохраните первые 4 строки data.txt в start_data.txt.
Выведите первые 7 строк из файла numbers.txt с числами 1-20.
Выведите первые 2 строки вывода команды who.
Создайте файл text.txt и выведите первые 5 строк в файл head_text.txt.

Команда cut
Создайте файл people.txt (Имя Возраст Город) и выведите только имена.
Извлеките возраст (второе поле) из файла people.txt.
Выведите первые два поля из /etc/passwd, разделённых :.
Сохраните города (третье поле) из people.txt в cities.txt.
Из вывода date извлеките только день недели.
Выведите первые 10 символов каждой строки из log.txt.
Из файла data.txt (с полями через табуляцию) извлеките второе поле.
Выведите третье поле из вывода ls -l (права доступа).
Сохраните первые 5 символов каждой строки notes.txt в short_notes.txt.
Извлеките имя пользователя (первое поле) из вывода who.

Команда ps
Выведите все процессы текущего пользователя.
Найдите PID процесса с именем firefox.
Выведите только команды запущенных процессов.
Подсчитайте общее количество процессов в системе.
Выведите процессы, использующие более 10% CPU.
Найдите все процессы с именем python.
Выведите информацию о процессе с PID 1.
Сохраните список процессов в файл ps_output.txt.
Выведите только PID и время запуска для процессов bash.
Найдите процесс с самым долгим временем работы.

Команда cp
Скопируйте файл source.txt в source_copy.txt.
Скопируйте директорию docs в docs_backup.
Скопируйте все .log файлы в директорию logs.
Скопируйте файл config.txt в /tmp с сохранением прав.
Создайте копию data.txt с именем data_$(date +%H%M).txt.
Скопируйте файл readme.txt в backup/readme.txt, создав директорию.
Скопируйте все файлы из src в dest, сохраняя структуру.
Скопируйте файл test.txt в test.bak только если он новее.
Скопируйте /etc/hosts в текущую директорию (если доступно).
Скопируйте все .txt файлы в archive с подтверждением перезаписи.

Команда less
Откройте файл /var/log/syslog и найдите слово fail.
Просмотрите файл manual.txt и перейдите к 100-й строке.
Откройте data.txt и найдите последнее вхождение error.
Используйте less для просмотра вывода ps aux.
Откройте файл long.txt и прокрутите до конца.
Найдите все вхождения слова test в notes.txt.
Откройте файл log.txt и перейдите на 50% файла.
Просмотрите файл config.txt и выйдите без изменений.
Откройте /etc/passwd и найдите строку с root.
Используйте less для просмотра history.txt с номерами строк.

Команда nl
Пронумеруйте строки файла list.txt с 5 строками.
Пронумеруйте строки list.txt, пропуская пустые строки.
Выведите пронумерованные строки из /etc/passwd.
Сохраните пронумерованный текст data.txt в numbered_data.txt.
Пронумеруйте строки вывода команды ls -l.
Создайте файл text.txt с пустыми строками и пронумеруйте только заполненные.
Выведите пронумерованные строки файла log.txt с шагом 2.
Пронумеруйте строки numbers.txt с ведущими нулями.
Сохраните пронумерованный вывод who в файл who_numbered.txt.
Пронумеруйте строки файла readme.txt с пользовательским разделителем.

Команда find
Найдите все .txt файлы в текущей директории.
Найдите файлы, изменённые за последние 3 дня.
Найдите все пустые файлы в /tmp.
Найдите файлы размером более 5 МБ в /home.
Найдите все директории с именем test в текущей директории.
Найдите все .log файлы, созданные более 30 дней назад.
Найдите файлы с правами 777 в /var.
Найдите все скрытые файлы (начинающиеся с .) в текущей директории.
Найдите все исполняемые файлы в /bin.
Найдите файлы с именем backup (регистр не важен) в /etc.

Команда du
Выведите размер текущей директории в читаемом формате.
Подсчитайте размер всех .txt файлов в текущей директории.
Выведите размер /var в килобайтах.
Найдите 10 самых больших поддиректорий в /home.
Сохраните размер директории logs в файл logs_size.txt.
Выведите общий размер всех файлов в /tmp.
Подсчитайте размер директории data с учётом скрытых файлов.
Выведите размер каждой поддиректории в текущей директории.
Найдите размер всех .log файлов в /var/log.
Выведите максимальную глубину вложенности в /usr.

Команда df
Выведите информацию о всех дисках в читаемом формате.
Выведите процент использования диска /.
Сохраните данные о дисках в файл disk_info.txt.
Выведите информацию о дисках в гигабайтах.
Найдите диск с наибольшим количеством свободного места.
Выведите только точки монтирования всех дисков.
Подсчитайте общее количество доступных блоков.
Выведите информацию только для диска /home.
Сохраните процент использования всех дисков в usage.txt.
Выведите диски с менее 20% свободного места.

Команда tar
Создайте архив data.tar из директории files.
Распакуйте архив data.tar в директорию extracted.
Создайте сжатый архив data.tar.gz из .txt файлов.
Выведите содержимое data.tar без распаковки.
Добавьте файл new.txt в архив data.tar.
Создайте архив backup.tar из /etc с исключением .conf.
Распакуйте только один файл из data.tar.gz.
Создайте сжатый архив logs.tar.bz2 из директории logs.
Проверьте целостность архива data.tar.gz.
Создайте архив all.tar из текущей директории с максимальным сжатием.

Команда zip
Создайте архив docs.zip из всех .txt файлов.
Распакуйте docs.zip в директорию unzipped.
Добавьте файл extra.txt в архив docs.zip.
Выведите содержимое docs.zip без распаковки.
Создайте защищённый паролем архив secure.zip из secret.
Создайте архив backup.zip из директории data с сжатием.
Распакуйте только один файл из docs.zip.
Обновите docs.zip, заменив старый readme.txt.
Создайте архив all.zip из текущей директории рекурсивно.
Проверьте архив docs.zip на ошибки.

Команда ps -aux
Выведите все процессы системы с полной информацией.
Найдите процессы пользователя root.
Подсчитайте количество процессов bash.
Выведите PID и команду для процессов python.
Сохраните вывод в файл all_processes.txt.
Найдите процессы с использованием памяти более 5%.
Выведите только процессы, запущенные более часа назад.
Найдите самый ресурсоёмкий процесс по CPU.
Выведите процессы с сортировкой по PID.
Подсчитайте общее количество процессов пользователя.

Команда kill
Запустите sleep 100 и завершите его по PID.
Найдите PID процесса firefox и завершите его.
Завершите все процессы python (осторожно!).
Убейте процесс с PID 1000 с сигналом SIGTERM.
Завершите процесс sleep с сигналом SIGKILL.
Остановите фоновый процесс cat и завершите его.
Найдите процесс с высоким CPU и завершите его.
Завершите последний запущенный процесс bash.
Убейте процесс по имени с подтверждением.
Завершите все процессы, связанные с test.sh.

Команда last
Выведите последние 10 входов в систему.
Найдите все входы пользователя admin.
Подсчитайте входы текущего пользователя.
Выведите только IP-адреса из last.
Сохраните историю входов в last_log.txt.
Найдите входы с определённого терминала (например, tty1).
Выведите только даты и время входов.
Найдите последний вход пользователя root.
Подсчитайте входы с конкретного IP.
Выведите входы за последний месяц.

Команда jobs
Запустите sleep 60 в фоне и выведите список заданий.
Остановите sleep 100 и проверьте статус заданий.
Запустите три фоновых процесса и выведите их список.
Перезапустите последнее остановленное задание.
Завершите все активные задания.
Запустите nano в фоне и проверьте .ConcurrentModificationExceptionjobs.
Остановите два процесса и выведите их номера.
Проверьте статус заданий после завершения одного.
Запустите cat в фоне и выведите его номер.
Остановите и перезапустите задание с sleep.

Команда bg
Запустите sleep 50 и переведите его в фон после остановки.
Остановите nano и переведите в фоновый режим.
Запустите два процесса и переведите их в фон.
Переведите последний остановленный процесс в фон.
Проверьте статус фоновых процессов после bg.
Остановите cat и запустите его в фоне.
Переведите sleep 200 в фон после Ctrl+Z.
Запустите python и переведите в фон.
Переведите все остановленные процессы в фон.
Проверьте, что происходит с bg без остановленных задач.

Команда fg
Запустите sleep 30 в фоне и верните на передний план.
Остановите nano и верните его на передний план.
Запустите два фоновых процесса и верните первый.
Переведите последний фоновый процесс на передний план.
Проверьте поведение fg без фоновых задач.
Запустите cat в фоне и верните его.
Остановите sleep 100 и верните на передний план.
Запустите python в фоне и верните его.
Верните фоновый процесс с номером 2.
Проверьте, что происходит с fg после завершения задачи.

Команда chmod
Дайте файлу script.sh права на выполнение.
Установите права чтения и записи для владельца data.txt.
Дайте всем права чтения на public.txt.
Уберите права выполнения у script.sh.
Установите права 644 на файл config.txt.
Дайте директории tools права 755.
Установите права только для группы на group_file.txt.
Сделайте файл secret.txt доступным только владельцу.
Дайте права записи всем на shared.txt.
Установите права 700 на директорию private.

Команда ping
Проверьте доступность google.com с 10 запросами.
Отправьте 5 пингов на 127.0.0.1.
Сохраните результат пинга 8.8.8.8 в ping_result.txt.
Выведите только время ответа от github.com.
Проверьте example.com с 20 запросами.
Пинганите 192.168.1.1 с выводом в реальном времени.
Ограничьте пинг facebook.com до 3 секунд.
Проверьте доступность localhost с минимальным выводом.
Сохраните пинг 1.1.1.1 с датой в ping_log.txt.
Выведите статистику пинга cloudflare.com.

Команда traceroute
Проследите маршрут до google.com.
Сохраните маршрут до 8.8.8.8 в traceroute.txt.
Выведите маршрут до github.com без имён хостов.
Ограничьте трассировку facebook.com до 15 хопов.
Проверьте маршрут до 127.0.0.1.
Выведите маршрут до 1.1.1.1 с числовыми IP.
Сохраните маршрут до example.com с временем ответа.
Проверьте маршрут до локальной сети 192.168.1.1.
Ограничьте трассировку amazon.com до 5 секунд.
Выведите маршрут до cloudflare.com с максимальной детализацией.

Команда nmap
Просканируйте порты на localhost.
Выполните быстрое сканирование 192.168.1.1.
Найдите активные хосты в 192.168.1.0/24.
Сохраните сканирование scanme.nmap.org в nmap_scan.txt.
Проверьте порты 80 и 443 на example.com.
Выполните полное сканирование 127.0.0.1.
Найдите открытые порты на github.com.
Сканируйте 192.168.0.0/24 с выводом версий служб.
Проверьте только TCP-порты на facebook.com.
Сохраните агрессивное сканирование localhost в detailed_scan.txt.

Команда netstat
Выведите все активные соединения.
Покажите только TCP-соединения.
Подсчитайте открытые порты.
Выведите прослушиваемые порты.
Сохраните статистику в netstat_log.txt.
Найдите соединения на порту 80.
Выведите только UDP-соединения.
Покажите маршруты сети.
Выведите статистику по протоколам.
Найдите процессы, использующие порт 22.

Команда nslookup
Узнайте IP-адрес google.com.
Найдите MX-записи для example.com.
Выполните обратный запрос для 8.8.8.8.
Сохраните результат для github.com в dns_result.txt.
Проверьте NS-записи для facebook.com.
Узнайте SOA-запись для cloudflare.com.
Найдите IP для localhost.
Проверьте CNAME для www.google.com.
Выполните запрос к серверу 1.1.1.1 для amazon.com.
Сохраните все записи для example.org в dns_full.txt.

Команда curl
Скачайте страницу example.com и выведите её.
Сохраните http://httpbin.org/get в get_response.txt.
Выведите заголовки https://api.github.com.
Отправьте POST-запрос с name=John на http://httpbin.org/post.
Скачайте https://example.com/file.txt в file.txt.
Выведите только код ответа от google.com.
Скачайте изображение с https://example.com/image.jpg.
Отправьте запрос с пользовательским заголовком на httpbin.org.
Сохраните JSON с https://api.ipify.org?format=json в ip.json.
Выполните запрос к facebook.com с тайм-аутом 5 секунд.
